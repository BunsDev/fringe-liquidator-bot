/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IFringePrimaryTokenIndex,
  IFringePrimaryTokenIndexInterface,
} from "../IFringePrimaryTokenIndex";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "depositedProjectTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loanBody",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accrual",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactorNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactorDenominator",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "liquidate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bLendingTokenAmount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFringePrimaryTokenIndex__factory {
  static readonly abi = _abi;
  static createInterface(): IFringePrimaryTokenIndexInterface {
    return new utils.Interface(_abi) as IFringePrimaryTokenIndexInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFringePrimaryTokenIndex {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IFringePrimaryTokenIndex;
  }
}
