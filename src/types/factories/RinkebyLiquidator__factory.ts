/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RinkebyLiquidator,
  RinkebyLiquidatorInterface,
} from "../RinkebyLiquidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_profitReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_primaryTokenIndex",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapV2Router",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "flashLoanPool",
        type: "address",
      },
    ],
    name: "liquidate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "primaryTokenIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "profitReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "uniswapV2Router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516118873803806118878339818101604052606081101561003357600080fd5b5080516020820151604090920151600080546001600160a01b039384166001600160a01b03199182161790915560018054948416948216949094179093556002805492909116919092161790556117f88061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063355c897311610050578063355c8973146101385780634c9fdb4c14610140578063a504839b1461018b57610067565b806310d1e85c1461006c5780631694505e14610107575b600080fd5b6101056004803603608081101561008257600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691602081013591604082013591908101906080810160608201356401000000008111156100c657600080fd5b8201836020820111156100d857600080fd5b803590602001918460018302840111640100000000831117156100fa57600080fd5b509092509050610193565b005b61010f610c89565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61010f610ca5565b6101056004803603608081101561015657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013582169160408201358116916060013516610cc1565b61010f6111b1565b60003373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101db57600080fd5b505afa1580156101ef573d6000803e3d6000fd5b505050506040513d602081101561020557600080fd5b5051604080517fd21220a70000000000000000000000000000000000000000000000000000000081529051919250600091339163d21220a7916004808301926020929190829003018186803b15801561025d57600080fd5b505afa158015610271573d6000803e3d6000fd5b505050506040513d602081101561028757600080fd5b5051600254604080517fc45a01550000000000000000000000000000000000000000000000000000000081529051929350339273ffffffffffffffffffffffffffffffffffffffff9092169163c45a015591600480820192602092909190829003018186803b1580156102f957600080fd5b505afa15801561030d573d6000803e3d6000fd5b505050506040513d602081101561032357600080fd5b5051604080517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529151919092169163e6a43905916044808301926020929190829003018186803b15801561039d57600080fd5b505afa1580156103b1573d6000803e3d6000fd5b505050506040513d60208110156103c757600080fd5b505173ffffffffffffffffffffffffffffffffffffffff161461044b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c6964207061697220666f7220666c617368206c6f616e0000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff871630146104cf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f696e76616c69642073656e646572000000000000000000000000000000000000604482015290519081900360640190fd5b60015460025473ffffffffffffffffffffffffffffffffffffffff91821691166000886104fc57876104fe565b885b905060008060008989606081101561051557600080fd5b50604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff89811660248301528251843582169750602080860135831697509490930135169350839263dd62ed3e92604480840193829003018186803b15801561059c57600080fd5b505afa1580156105b0573d6000803e3d6000fd5b505050506040513d60208110156105c657600080fd5b50516106135761061373ffffffffffffffffffffffffffffffffffffffff8216877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff63ffffffff6111cd16565b604080517fca5ce2ec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528481166024830152838116604483015291519188169163ca5ce2ec9160648082019260009290919082900301818387803b15801561069457600080fd5b505af11580156106a8573d6000803e3d6000fd5b5050604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516000935073ffffffffffffffffffffffffffffffffffffffff851692506370a0823191602480820192602092909190829003018186803b15801561071c57600080fd5b505afa158015610730573d6000803e3d6000fd5b505050506040513d602081101561074657600080fd5b50519050808510156107b957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f6c656e64696e6720746f6b656e2062616c616e636573206d69736d6174636800604482015290519081900360640190fd5b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff888116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561082f57600080fd5b505afa158015610843573d6000803e3d6000fd5b505050506040513d602081101561085957600080fd5b50516108a6576108a673ffffffffffffffffffffffffffffffffffffffff8416877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff63ffffffff6111cd16565b604080516002808252606080830184529260208301908038833901905050905083816000815181106108d457fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160018151811061091c57fe5b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518a8416936338ed173993908916926370a082319260248083019392829003018186803b1580156109a157600080fd5b505afa1580156109b5573d6000803e3d6000fd5b505050506040513d60208110156109cb57600080fd5b50516109dd898663ffffffff61136016565b8430426040518663ffffffff1660e01b815260040180868152602001858152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610a73578181015183820152602001610a5b565b505050509050019650505050505050600060405180830381600087803b158015610a9c57600080fd5b505af1158015610ab0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526020811015610af757600080fd5b8101908080516040519392919084640100000000821115610b1757600080fd5b908301906020820185811115610b2c57600080fd5b8251866020820283011164010000000082111715610b4957600080fd5b82525081516020918201928201910280838360005b83811015610b76578181015183820152602001610b5e565b5050505090500160405250505050610baf33878573ffffffffffffffffffffffffffffffffffffffff166113a99092919063ffffffff16565b600054604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051610c789273ffffffffffffffffffffffffffffffffffffffff90811692908716916370a0823191602480820192602092909190829003018186803b158015610c2857600080fd5b505afa158015610c3c573d6000803e3d6000fd5b505050506040513d6020811015610c5257600080fd5b505173ffffffffffffffffffffffffffffffffffffffff8616919063ffffffff6113a916565b505050505050505050505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6040805173ffffffffffffffffffffffffffffffffffffffff80871660208084019190915281871683850152818616606084810182905285518086039091018152608085018087527f0dfe16810000000000000000000000000000000000000000000000000000000090529451909392861692630dfe1681926084808301939192829003018186803b158015610d5657600080fd5b505afa158015610d6a573d6000803e3d6000fd5b505050506040513d6020811015610d8057600080fd5b505173ffffffffffffffffffffffffffffffffffffffff161415610f53578173ffffffffffffffffffffffffffffffffffffffff1663022c0d9f8473ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e3757600080fd5b505afa158015610e4b573d6000803e3d6000fd5b505050506040513d6020811015610e6157600080fd5b50516040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b168152600481018281526000602483018190523060448401819052608060648501908152885160848601528851929491938993909260a4019060208501908083838a5b83811015610ee7578181015183820152602001610ecf565b50505050905090810190601f168015610f145780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610f3657600080fd5b505af1158015610f4a573d6000803e3d6000fd5b505050506111aa565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610fb057600080fd5b505afa158015610fc4573d6000803e3d6000fd5b505050506040513d6020811015610fda57600080fd5b505173ffffffffffffffffffffffffffffffffffffffff1614610ff957fe5b8173ffffffffffffffffffffffffffffffffffffffff1663022c0d9f60008573ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561109457600080fd5b505afa1580156110a8573d6000803e3d6000fd5b505050506040513d60208110156110be57600080fd5b50516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101838152602482018390523060448301819052608060648401908152885160848501528851919389939260a490910190602085019080838360005b8381101561114257818101518382015260200161112a565b50505050905090810190601f16801561116f5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561119157600080fd5b505af11580156111a5573d6000803e3d6000fd5b505050505b5050505050565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b8015806112795750604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561124b57600080fd5b505afa15801561125f573d6000803e3d6000fd5b505050506040513d602081101561127557600080fd5b5051155b6112ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603681526020018061178e6036913960400191505060405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905261135b908490611432565b505050565b60006113a283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611676565b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261135b9084905b6114518273ffffffffffffffffffffffffffffffffffffffff16611727565b6114bc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061152557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016114e8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611587576040519150601f19603f3d011682016040523d82523d6000602084013e61158c565b606091505b5091509150816115fd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156116705780806020019051602081101561161957600080fd5b5051611670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611764602a913960400191505060405180910390fd5b50505050565b6000818484111561171f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116e45781810151838201526020016116cc565b50505050905090810190601f1680156117115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061175b57508115155b94935050505056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a723158209f2d586d3c62840335aae4e607409d07997ee7c9ded10d85c09b7f0b6052453164736f6c63430005100032";

type RinkebyLiquidatorConstructorParams =
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RinkebyLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RinkebyLiquidator__factory extends ContractFactory {
  constructor(...args: RinkebyLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RinkebyLiquidator";
  }

  deploy(
    _profitReceiver: string,
    _primaryTokenIndex: string,
    _uniswapV2Router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RinkebyLiquidator> {
    return super.deploy(
      _profitReceiver,
      _primaryTokenIndex,
      _uniswapV2Router,
      overrides || {}
    ) as Promise<RinkebyLiquidator>;
  }
  getDeployTransaction(
    _profitReceiver: string,
    _primaryTokenIndex: string,
    _uniswapV2Router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _profitReceiver,
      _primaryTokenIndex,
      _uniswapV2Router,
      overrides || {}
    );
  }
  attach(address: string): RinkebyLiquidator {
    return super.attach(address) as RinkebyLiquidator;
  }
  connect(signer: Signer): RinkebyLiquidator__factory {
    return super.connect(signer) as RinkebyLiquidator__factory;
  }
  static readonly contractName: "RinkebyLiquidator";
  public readonly contractName: "RinkebyLiquidator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RinkebyLiquidatorInterface {
    return new utils.Interface(_abi) as RinkebyLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RinkebyLiquidator {
    return new Contract(address, _abi, signerOrProvider) as RinkebyLiquidator;
  }
}
